version: '3'

volumes:
  postgres-db-volume:

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    
  airflow-init:
    build: ./airflow
    container_name: airflow-init
    environment:
      - AIRFLOW__WEBSERVER__SECRET_KEY=diuy3rbbkaj98837647bhdb
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/credentials/google_credentials.json
      - GCP_PROJECT_ID=${TF_VAR_GCP_PROJECT_ID}
      - GCP_GCS_BUCKET=${TF_VAR_GCP_GCS_BUCKET_NAME}
      - GCP_BIGQUERY_DATASET=${TF_VAR_GCP_BIGQUERY_DATASET}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/data:/opt/airflow/data
      - ./airflow/logs:/opt/airflow/logs
      - ./.env:/opt/airflow/.env
      - ./google_credentials.json:/.google/credentials/google_credentials.json:ro
    command: bash -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    depends_on:
      postgres:
        condition: service_healthy
  
  airflow-scheduler:
    build: ./airflow
    container_name: airflow-scheduler
    restart: always
    environment:
      - AIRFLOW__WEBSERVER__SECRET_KEY=diuy3rbbkaj98837647bhdb
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/credentials/google_credentials.json
      - GCP_PROJECT_ID=${TF_VAR_GCP_PROJECT_ID}
      - GCP_GCS_BUCKET=${TF_VAR_GCP_GCS_BUCKET_NAME}
      - GCP_BIGQUERY_DATASET=${TF_VAR_GCP_BIGQUERY_DATASET}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/data:/opt/airflow/data
      - ./airflow/logs:/opt/airflow/logs
      - ./.env:/opt/airflow/.env
      - ./google_credentials.json:/.google/credentials/google_credentials.json:ro
    command: scheduler
    depends_on:
      - postgres

  airflow-webserver:
    build: ./airflow
    container_name: airflow-webserver
    restart: always
    environment:
      - AIRFLOW__WEBSERVER__SECRET_KEY=diuy3rbbkaj98837647bhdb
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW_CONN_SPARK_DEFAULT=spark://spark-master:7077
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/credentials/google_credentials.json
      - GCP_PROJECT_ID=${TF_VAR_GCP_PROJECT_ID}
      - GCP_GCS_BUCKET=${TF_VAR_GCP_GCS_BUCKET_NAME}
      - GCP_BIGQUERY_DATASET=${TF_VAR_GCP_BIGQUERY_DATASET}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/scripts:/opt/airflow/scripts
      - ./airflow/data:/opt/airflow/data
      - ./airflow/logs:/opt/airflow/logs
      - ./.env:/opt/airflow/.env
      - ./google_credentials.json:/.google/credentials/google_credentials.json:ro
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      - postgres
      - airflow-scheduler
    
  spark-master:
    build: ./spark
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/credentials/google_credentials.json
    volumes:
      - ./google_credentials.json:/.google/credentials/google_credentials.json:ro
      - ./airflow/scripts:/opt/airflow/scripts
    ports:
      - "7077:7077"
      - "8081:8080"

  spark-worker:
    build: ./spark
    depends_on:
      - spark-master
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/credentials/google_credentials.json
    volumes:
      - ./google_credentials.json:/.google/credentials/google_credentials.json:ro
      - ./airflow/scripts:/opt/airflow/scripts
    ports:
      - "8082:8080"